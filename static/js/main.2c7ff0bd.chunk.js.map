{"version":3,"sources":["images/logo.svg","components/Hero.js","components/Banner.js","components/Title.js","components/Services.js","pages/Home.js","pages/Rooms.js","pages/SingleRoom.js","pages/Error.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","children","hero","className","Banner","title","subtitle","defaultProps","Title","Ser","Component","Home","to","Services","Rooms","SingleRoom","Error","Navbar","state","isOpen","handleToggle","setState","src","logo","alt","type","onClick","this","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,gLCE5B,SAASC,EAAT,GAAgC,IAAjBC,EAAgB,EAAhBA,SAASC,EAAO,EAAPA,KACnC,OACI,4BAAQC,UAAWD,GACdD,GCHE,SAASG,EAAT,GAA6C,IAA5BH,EAA2B,EAA3BA,SAASI,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAC5C,OACI,yBAAKH,UAAU,UACX,4BAAKE,GACL,8BACA,2BAAIC,GACHL,GDCbD,EAAKO,aAAc,CACfL,KAAK,e,kCERM,SAASM,EAAT,GAAyB,IAATH,EAAQ,EAARA,MAC3B,OACI,yBAAKF,UAAU,iBACX,4BAAKE,GACjB,+B,ICKeI,E,uKAPP,OACI,6BACG,kBAACD,EAAD,CAAOH,MAAO,kB,GAJVK,aCkBJC,EAdD,WACV,OACG,oCACA,kBAACX,EAAD,KACG,kBAACI,EAAD,CAAQC,MAAM,kBAAkBC,SAAU,iCAExC,kBAAC,IAAD,CAAMM,GAAG,SAAST,UAAU,eAA5B,eAIL,kBAACU,EAAD,QCDSC,EAXD,WACX,OACI,kBAACd,EAAD,CAAME,KAAK,aACX,kBAACE,EAAD,CAAQC,MAAM,aACd,kBAAC,IAAD,CAAMO,GAAG,IAAIT,UAAU,eAAvB,kBCNaY,E,uKAEb,OACI,0D,GAH4BL,aCazBM,EAXD,WACV,OACG,kBAAChB,EAAD,KACG,kBAACI,EAAD,CAAQC,MAAM,MAAMC,SAAU,kBAC9B,kBAAC,IAAD,CAAMM,GAAG,IAAIT,UAAW,eAAxB,kB,yBCJWc,E,4MACjBC,MAAQ,CACJC,QAAO,G,EAEXC,aAAc,WACV,EAAKC,SAAS,CAAEF,QAAS,EAAKD,MAAMC,U,uDAGpC,OACI,yBAAKhB,UAAW,UACZ,yBAAKA,UAAW,cACZ,yBAAKA,UAAU,cACd,kBAAC,IAAD,CAAMS,GAAI,KACN,yBAAKU,IAAKC,IAAMC,IAAK,WAEhC,4BAAQC,KAAK,SAAStB,UAAW,UAAUuB,QAASC,KAAKP,cACrD,kBAAC,IAAD,CAAcjB,UAAW,eAG7B,wBAAIA,UACHwB,KAAKT,MAAMC,OAAS,qBAAsB,aAC5C,4BACO,kBAAC,IAAD,CAAMP,GAAG,KAAT,SAEN,4BACM,kBAAC,IAAD,CAAMA,GAAG,UAAT,iB,GAzBgBF,a,MC0BrBkB,MAjBf,WACE,OAEE,yBAAKzB,UAAU,OACf,kBAAC,EAAD,MACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAKC,UAAWpB,IAClC,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,UAAUC,UAAWjB,IACvC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,eAAeC,UAAWhB,IAC5C,kBAAC,IAAD,CAAOgB,UAAWf,OCVJgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2c7ff0bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9f0cccc1.svg\";","import React from 'react'\r\n\r\nexport default function Hero({children,hero}) {\r\n    return (\r\n        <header className={hero}>\r\n            {children}\r\n        </header>\r\n    )\r\n}\r\nHero.defaultProps ={\r\n    hero:\"defaultHero\"\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Banner({children,title, subtitle}) {\r\n    return (\r\n        <div className=\"banner\">\r\n            <h1>{title}</h1>\r\n            <div></div>\r\n            <p>{subtitle}</p>\r\n            {children}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Title({title}) {\r\n    return (\r\n        <div className=\"section-title\">\r\n            <h4>{title}</h4>\r\n<div/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Title from './Title';\r\n class Ser extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Title title =\"services\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Ser;\r\n","import React from 'react'\r\nimport Hero from '../components/Hero';\r\nimport Banner from '../components/Banner';\r\nimport { Link } from 'react-router-dom';\r\nimport Services from '../components/Services';\r\n\r\n const Home = () => {\r\n    return (\r\n       <>\r\n       <Hero>\r\n          <Banner title=\"luxurious rooms\" subtitle =\"deluxe rooms starting at $299\">\r\n            \r\n            <Link to='/rooms' className=\"btn-primary\">\r\n               our rooms</Link>\r\n            </Banner>\r\n       </Hero>\r\n       <Services/>\r\n       </>\r\n    )\r\n}\r\nexport default Home;","import React from 'react'\r\nimport Hero from '../components/Hero';\r\nimport Banner from '../components/Banner';\r\nimport { Link } from 'react-router-dom';\r\n const Rooms = () => {\r\n    return (\r\n        <Hero hero=\"roomsHero\">\r\n        <Banner title=\"Our Rooms\" >\r\n        <Link to=\"/\" className=\"btn-primary\">\r\n        return home\r\n        </Link>\r\n        </Banner>\r\n        </Hero>\r\n    )\r\n}\r\nexport default  Rooms\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SingleRoom extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Hello form SingleRoom\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Hero from '../components/Hero';\r\nimport Banner from '../components/Banner';\r\nimport { Link } from 'react-router-dom';\r\nconst Error = () => {\r\n    return (\r\n       <Hero>\r\n          <Banner title='404' subtitle =\"page not found\">\r\n          <Link to='/' className ='btn-primary'>\r\n              return home\r\n          </Link>\r\n          </Banner> \r\n       </Hero>\r\n    )\r\n}\r\nexport default Error;\r\n","import React, { Component } from 'react'\r\nimport logo from '../images/logo.svg';\r\nimport {FaAlignRight} from 'react-icons/fa';\r\nimport {Link} from 'react-router-dom';\r\nexport default class Navbar extends Component {\r\n    state = {\r\n        isOpen:false\r\n    }\r\n    handleToggle= () =>{\r\n        this.setState({ isOpen: !this.state.isOpen});\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className ='navbar'>\r\n                <div className ='nav-center'>\r\n                    <div className='nav-header'>\r\n                     <Link to ='/'>\r\n                         <img src={logo} alt =\"beach\"/>   \r\n              </Link>\r\n              <button type=\"button\" className =\"nav-btn\" onClick={this.handleToggle}>\r\n                  <FaAlignRight className =\"nav-icon\"/>\r\n              </button>\r\n               </div>\r\n              <ul className =\r\n              {this.state.isOpen ? \"nav-links show-nav\" :\"nav-links\"}> \r\n             <li>\r\n                    <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                    <Link to=\"/rooms\">Rooms</Link>\r\n              </li>\r\n              </ul>\r\n               \r\n               </div>\r\n\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Rooms from './pages/Rooms';\r\nimport SingleRoom from './pages/SingleRoom';\r\nimport Error from './pages/Error';\r\nimport Navbar from './components/Navbar';\r\n\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n   \r\n    <div className=\"App\">\r\n    <Navbar/>\r\n      <Switch>\r\n      <Route exact path='/'  component={Home}/>\r\n      <Route exact path='/rooms/' component={Rooms}/>\r\n      <Route exact path='/rooms/:slug' component={SingleRoom}/>\r\n      <Route component={Error}/>\r\n     </Switch>\r\n    \r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}